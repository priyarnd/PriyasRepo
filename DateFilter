public static void sortStringsByDate(List<String> strings) {
        Collections.sort(strings, new Comparator<String>() {
            private final DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            private final Splitter splitter = Splitter.on('~').omitEmptyStrings().trimResults();

            @Override
            public int compare(String o1, String o2) {
                LocalDate date1 = extractDate(o1);
                LocalDate date2 = extractDate(o2);
                return date2.compareTo(date1); // For descending order
            }

            private LocalDate extractDate(String str) {
                List<String> parts = splitter.splitToList(str);
                if (parts.size() < 2) {
                    throw new IllegalArgumentException("String does not contain enough parts to extract a date");
                }
                String dateString = parts.get(parts.size() - 2); // Second last element
                return LocalDate.parse(dateString, dateFormatter);
            }
        });
    }
}
